<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 软件作者：何栋宇 qq:709876443
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:648595928
-->
<mapper namespace="com.example.storage.youyaboot.dao.UuserMapper">
    <!-- Uuser -->
    <resultMap id="resultMap" type="Uuser">
        <id column="id" property="id"/>
        <result column="userName" property="userName" />
        <result column="userPsw" property="userPsw" />
        <result column="userPhone" property="userPhone" />
        <result column="Popedom" property="Popedom" />
        <result column="createTime" property="createTime" />
        <result column="upTime" property="upTime" />
        <result column="upUser" property="upUser" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="Uuser"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="Uuser"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="Uuser"  useGeneratedKeys="true" keyProperty="id" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="Uuser"  useGeneratedKeys="true" keyProperty="id" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="id" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="Uuser">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="Uuser">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">`id`,</if>
            <if test="userNameIgnore_ == null or !userNameIgnore_">`userName`,</if>
            <if test="userPswIgnore_ == null or !userPswIgnore_">`userPsw`,</if>
            <if test="userPhoneIgnore_ == null or !userPhoneIgnore_">`userPhone`,</if>
            <if test="PopedomIgnore_ == null or !PopedomIgnore_">`Popedom`,</if>
            <if test="createTimeIgnore_ == null or !createTimeIgnore_">`createTime`,</if>
            <if test="upTimeIgnore_ == null or !upTimeIgnore_">`upTime`,</if>
            <if test="upUserIgnore_ == null or !upUserIgnore_">`upUser`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">`id`,</if>
         <if test="userNameNotIgnore_ != null and userNameNotIgnore_">`userName`,</if>
         <if test="userPswNotIgnore_ != null and userPswNotIgnore_">`userPsw`,</if>
         <if test="userPhoneNotIgnore_ != null and userPhoneNotIgnore_">`userPhone`,</if>
         <if test="PopedomNotIgnore_ != null and PopedomNotIgnore_">`Popedom`,</if>
         <if test="createTimeNotIgnore_ != null and createTimeNotIgnore_">`createTime`,</if>
         <if test="upTimeNotIgnore_ != null and upTimeNotIgnore_">`upTime`,</if>
         <if test="upUserNotIgnore_ != null and upUserNotIgnore_">`upUser`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">`id`,</if> `userName`,`userPsw`,`userPhone`,`Popedom`,`createTime`,`upTime`,`upUser`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userName!=null">#{userName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="userPsw!=null">#{userPsw},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="userPhone!=null">#{userPhone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="Popedom!=null">#{Popedom},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="createTime!=null">#{createTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="upTime!=null">#{upTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="upUser!=null">#{upUser},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">`id`,</if>
                <if test="userName!=null">`userName`,</if>
                <if test="userPsw!=null">`userPsw`,</if>
                <if test="userPhone!=null">`userPhone`,</if>
                <if test="Popedom!=null">`Popedom`,</if>
                <if test="createTime!=null">`createTime`,</if>
                <if test="upTime!=null">`upTime`,</if>
                <if test="upUser!=null">`upUser`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="userName!=null">#{userName},</when></choose>
                <choose><when test="userPsw!=null">#{userPsw},</when></choose>
                <choose><when test="userPhone!=null">#{userPhone},</when></choose>
                <choose><when test="Popedom!=null">#{Popedom},</when></choose>
                <choose><when test="createTime!=null">#{createTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="upTime!=null">#{upTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="upUser!=null">#{upUser},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if> `userName`,`userPsw`,`userPhone`,`Popedom`,`createTime`,`upTime`,`upUser`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userName!=null">#{item.userName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.userPsw!=null">#{item.userPsw},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.userPhone!=null">#{item.userPhone},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.Popedom!=null">#{item.Popedom},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.createTime!=null">#{item.createTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.upTime!=null">#{item.upTime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.upUser!=null">#{item.upUser},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.id!=null">`id`,</if>
                <if test="item.userName!=null">`userName`,</if>
                <if test="item.userPsw!=null">`userPsw`,</if>
                <if test="item.userPhone!=null">`userPhone`,</if>
                <if test="item.Popedom!=null">`Popedom`,</if>
                <if test="item.createTime!=null">`createTime`,</if>
                <if test="item.upTime!=null">`upTime`,</if>
                <if test="item.upUser!=null">`upUser`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when></choose>
                <choose><when test="item.userName!=null">#{item.userName},</when></choose>
                <choose><when test="item.userPsw!=null">#{item.userPsw},</when></choose>
                <choose><when test="item.userPhone!=null">#{item.userPhone},</when></choose>
                <choose><when test="item.Popedom!=null">#{item.Popedom},</when></choose>
                <choose><when test="item.createTime!=null">#{item.createTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.upTime!=null">#{item.upTime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.upUser!=null">#{item.upUser},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="userName!=null">`userName`=#{userName}</when> <otherwise> `userName`=NULL</otherwise> </choose>,
                    <choose> <when test="userPsw!=null">`userPsw`=#{userPsw}</when> <otherwise> `userPsw`=NULL</otherwise> </choose>,
                    <choose> <when test="userPhone!=null">`userPhone`=#{userPhone}</when> <otherwise> `userPhone`=NULL</otherwise> </choose>,
                    <choose> <when test="Popedom!=null">`Popedom`=#{Popedom}</when> <otherwise> `Popedom`=NULL</otherwise> </choose>,
                    <choose> <when test="createTime!=null">`createTime`=#{createTime,jdbcType=TIMESTAMP}</when> <otherwise> `createTime`=NULL</otherwise> </choose>,
                    <choose> <when test="upTime!=null">`upTime`=#{upTime,jdbcType=TIMESTAMP}</when> <otherwise> `upTime`=NULL</otherwise> </choose>,
                    <choose> <when test="upUser!=null">`upUser`=#{upUser}</when> <otherwise> `upUser`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="userName!=null">`userName`=#{userName},</when></choose>
                    <choose><when test="userPsw!=null">`userPsw`=#{userPsw},</when></choose>
                    <choose><when test="userPhone!=null">`userPhone`=#{userPhone},</when></choose>
                    <choose><when test="Popedom!=null">`Popedom`=#{Popedom},</when></choose>
                    <choose><when test="createTime!=null">`createTime`=#{createTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="upTime!=null">`upTime`=#{upTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="upUser!=null">`upUser`=#{upUser},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `id` = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.userName!=null">`userName`=#{item.userName}</when> <otherwise> `userName`=NULL</otherwise> </choose>,
                    <choose> <when test="item.userPsw!=null">`userPsw`=#{item.userPsw}</when> <otherwise> `userPsw`=NULL</otherwise> </choose>,
                    <choose> <when test="item.userPhone!=null">`userPhone`=#{item.userPhone}</when> <otherwise> `userPhone`=NULL</otherwise> </choose>,
                    <choose> <when test="item.Popedom!=null">`Popedom`=#{item.Popedom}</when> <otherwise> `Popedom`=NULL</otherwise> </choose>,
                    <choose> <when test="item.createTime!=null">`createTime`=#{item.createTime,jdbcType=TIMESTAMP}</when> <otherwise> `createTime`=NULL</otherwise> </choose>,
                    <choose> <when test="item.upTime!=null">`upTime`=#{item.upTime,jdbcType=TIMESTAMP}</when> <otherwise> `upTime`=NULL</otherwise> </choose>,
                    <choose> <when test="item.upUser!=null">`upUser`=#{item.upUser}</when> <otherwise> `upUser`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.userName!=null">`userName`=#{item.userName},</when></choose>
                    <choose> <when test="item.userPsw!=null">`userPsw`=#{item.userPsw},</when></choose>
                    <choose> <when test="item.userPhone!=null">`userPhone`=#{item.userPhone},</when></choose>
                    <choose> <when test="item.Popedom!=null">`Popedom`=#{item.Popedom},</when></choose>
                    <choose> <when test="item.createTime!=null">`createTime`=#{item.createTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.upTime!=null">`upTime`=#{item.upTime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.upUser!=null">`upUser`=#{item.upUser},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `id` = #{item.id}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        storage.u_user
    </sql>

   <sql id="whereSqlModel">
        <if test="id!=null "> and `id` = #{id}</if>
        <if test="userName!=null "> and `userName` = #{userName}</if>
        <if test="userPsw!=null "> and `userPsw` = #{userPsw}</if>
        <if test="userPhone!=null "> and `userPhone` = #{userPhone}</if>
        <if test="Popedom!=null "> and `Popedom` = #{Popedom}</if>
        <if test="createTime!=null "> and `createTime` = #{createTime,jdbcType=TIMESTAMP}</if>
        <if test="upTime!=null "> and `upTime` = #{upTime,jdbcType=TIMESTAMP}</if>
        <if test="upUser!=null "> and `upUser` = #{upUser}</if>
                <if test="idFirst!=null "> and `id` <![CDATA[=]]>
                            #{idFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'id'">  `id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'userName'">  `userName` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'userPsw'">  `userPsw` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'userPhone'">  `userPhone` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'Popedom'">  `Popedom` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'createTime'">  `createTime` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'upTime'">  `upTime` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'upUser'">  `upUser` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'id desc'"> order by  `id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'id asc'"> order by `id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userName desc'"> order by  `userName` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userName asc'"> order by `userName` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userPsw desc'"> order by  `userPsw` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userPsw asc'"> order by `userPsw` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userPhone desc'"> order by  `userPhone` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'userPhone asc'"> order by `userPhone` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'Popedom desc'"> order by  `Popedom` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'Popedom asc'"> order by `Popedom` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'createTime desc'"> order by  `createTime` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'createTime asc'"> order by `createTime` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'upTime desc'"> order by  `upTime` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'upTime asc'"> order by `upTime` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'upUser desc'"> order by  `upUser` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'upUser asc'"> order by `upUser` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
